"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var wrap_1 = require("./lib/wrap");
function withErrorHandler(router, errorHandler) {
    var routeObject = {
        get: function (path) {
            var handlers = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                handlers[_i - 1] = arguments[_i];
            }
            var mappedHandlers = handlers.map(wrap_1.default);
            router.get(path, mappedHandlers, errorHandler);
        },
        post: function (path) {
            var handlers = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                handlers[_i - 1] = arguments[_i];
            }
            var mappedHandlers = handlers.map(wrap_1.default);
            router.post(path, mappedHandlers, errorHandler);
        },
        put: function (path) {
            var handlers = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                handlers[_i - 1] = arguments[_i];
            }
            var mappedHandlers = handlers.map(wrap_1.default);
            router.put(path, mappedHandlers, errorHandler);
        },
        delete: function (path) {
            var handlers = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                handlers[_i - 1] = arguments[_i];
            }
            var mappedHandlers = handlers.map(wrap_1.default);
            router.delete(path, mappedHandlers, errorHandler);
        }
    };
    // @ts-ignore
    return __assign(__assign({}, router), routeObject);
}
exports.default = withErrorHandler;
